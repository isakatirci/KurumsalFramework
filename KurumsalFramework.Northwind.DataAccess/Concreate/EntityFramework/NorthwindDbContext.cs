// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace KurumsalFramework.Northwind.DataAccess.Concreate.EntityFramework
{
	using KurumsalFramework.Core.Entities;
	using KurumsalFramework.Northwind.DataAccess.Concreate.EntityFramework.Mappings;
	using KurumsalFramework.Northwind.Entities.Concreate;


	[System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
	public partial class NorthwindDbContext : System.Data.Entity.DbContext, INorthwindDbContext
	{
		public System.Data.Entity.DbSet<Category> Categories { get; set; } // Categories
		public System.Data.Entity.DbSet<Customer> Customers { get; set; } // Customers
		public System.Data.Entity.DbSet<CustomerDemographic> CustomerDemographics { get; set; } // CustomerDemographics
		public System.Data.Entity.DbSet<Employee> Employees { get; set; } // Employees
		public System.Data.Entity.DbSet<Order> Orders { get; set; } // Orders
		public System.Data.Entity.DbSet<OrderDetail> OrderDetails { get; set; } // Order Details
		public System.Data.Entity.DbSet<Product> Products { get; set; } // Products
		public System.Data.Entity.DbSet<Region> Regions { get; set; } // Region
		public System.Data.Entity.DbSet<Shipper> Shippers { get; set; } // Shippers
		public System.Data.Entity.DbSet<Supplier> Suppliers { get; set; } // Suppliers
		public System.Data.Entity.DbSet<Territory> Territories { get; set; } // Territories

		static NorthwindDbContext()
		{
			System.Data.Entity.Database.SetInitializer<NorthwindDbContext>(null);
		}

		public NorthwindDbContext()
			: base("Name=DefaultConnection")
		{
			InitializePartial();
		}

		public NorthwindDbContext(string connectionString)
			: base(connectionString)
		{
			InitializePartial();
		}

		public NorthwindDbContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
			: base(connectionString, model)
		{
			InitializePartial();
		}

		public NorthwindDbContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
			: base(existingConnection, contextOwnsConnection)
		{
			InitializePartial();
		}

		public NorthwindDbContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
			: base(existingConnection, model, contextOwnsConnection)
		{
			InitializePartial();
		}

		protected override void Dispose(bool disposing)
		{
			DisposePartial(disposing);
			base.Dispose(disposing);
		}

		public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
		{
			var sqlValue = param.SqlValue;
			var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
			if (nullableValue != null)
				return nullableValue.IsNull;
			return (sqlValue == null || sqlValue == System.DBNull.Value);
		}

		protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
		{
			base.OnModelCreating(modelBuilder);

			modelBuilder.Configurations.Add(new CategoryMapping());
			modelBuilder.Configurations.Add(new CustomerMapping());
			modelBuilder.Configurations.Add(new CustomerDemographicMapping());
			modelBuilder.Configurations.Add(new EmployeeMapping());
			modelBuilder.Configurations.Add(new OrderMapping());
			modelBuilder.Configurations.Add(new OrderDetailMapping());
			modelBuilder.Configurations.Add(new ProductMapping());
			modelBuilder.Configurations.Add(new RegionMapping());
			modelBuilder.Configurations.Add(new ShipperMapping());
			modelBuilder.Configurations.Add(new SupplierMapping());
			modelBuilder.Configurations.Add(new TerritoryMapping());

			OnModelCreatingPartial(modelBuilder);
		}

		public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
		{
			modelBuilder.Configurations.Add(new CategoryMapping(schema));
			modelBuilder.Configurations.Add(new CustomerMapping(schema));
			modelBuilder.Configurations.Add(new CustomerDemographicMapping(schema));
			modelBuilder.Configurations.Add(new EmployeeMapping(schema));
			modelBuilder.Configurations.Add(new OrderMapping(schema));
			modelBuilder.Configurations.Add(new OrderDetailMapping(schema));
			modelBuilder.Configurations.Add(new ProductMapping(schema));
			modelBuilder.Configurations.Add(new RegionMapping(schema));
			modelBuilder.Configurations.Add(new ShipperMapping(schema));
			modelBuilder.Configurations.Add(new SupplierMapping(schema));
			modelBuilder.Configurations.Add(new TerritoryMapping(schema));
			OnCreateModelPartial(modelBuilder, schema);
			return modelBuilder;
		}

		partial void InitializePartial();
		partial void DisposePartial(bool disposing);
		partial void OnModelCreatingPartial(System.Data.Entity.DbModelBuilder modelBuilder);
		static partial void OnCreateModelPartial(System.Data.Entity.DbModelBuilder modelBuilder, string schema);        
	}
}
// </auto-generated>
